# ===============================================================================
# INSTRUCTIONS TO UPDATE
# ===============================================================================
# This file will be updated on the droplet automatically by the deployment script. 
# To add this file back to the digital ocean droplet manually do the following: 
# 1. SSH into the droplet - make changes using preferred editor
# e.g. sudo vim /etc/nginx/sites-available/flight-prices
#
# 2. Create a symbolic link to the sites-enabled directory to activate this configuration:
# sudo ln -s /etc/nginx/sites-available/flight-prices /etc/nginx/sites-enabled/
#
# 3. Before reloading Nginx, you should check for syntax errors:
# sudo nginx -t
#
# 4. Reload Nginx
# sudo systemctl reload nginx
# ===============================================================================
server {
    listen 80;
    server_name 134.122.100.113 mindbrush.art www.mindbrush.art;
    return 301 https://$host$request_uri;

    location /api {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

        # Location block for the React app
    location / {
        root /var/www/ai-posters/ui;  # Path to your React app's static files
        try_files $uri $uri/ /index.html;
    }
}

server {
    listen 443 ssl;
    server_name mindbrush.art www.mindbrush.art;

    ssl_certificate /etc/letsencrypt/live/mindbrush.art/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mindbrush.art/privkey.pem;

    # Strong SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305';
    ssl_prefer_server_ciphers on;

    # Same location blocks as in your HTTP server
    location /api {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        root /var/www/ai-posters/ui;
        try_files $uri $uri/ /index.html;
    }
}
